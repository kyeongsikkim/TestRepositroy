1.개발환경구축
2.변수,타입
3.연산자
4.흐름제어문(if,for,while)
5.참조타입



데이터타입
8개기본타입제공
C하고 다른점은 boolean (0.1이 아닌 true,false로 구분)
float 4바이트
double 8바이트
boolean 1바이트

정수 기본 타입int
실수 기본 타입double

참조 타입:
저장되는 값이 값자체가아니라 메모리 번지 주소에 저장됨

p4.메모리사용영역
값을 갖고 있을때, 번지를 갖고있을때 언제 생성되고 언제없어지는지
JVM 자바프로그램을 운영시키는 가상의 운영체제
힙영역- 데이터가 수시로 들어왔다 나갔다 하는 영역
스택-변수가 생성되는 영역
처음프로그램을 메모리로 올리는 과정-(클래스)로딩
메소드영역(정적영역)-바뀌지 않는 영역

.java ->(컴파일)->.class    .java명령어로 실행 JVM을 실행시키는 구동명령어
JVM이 .class코드를 다 읽어 
JVM이 main 먼저 찾고, 실행ㅅ켜
main에서 선언한 변수들.(수시로 생겼다 없어졌다 하는 것들) 
메소드 하나마다 스택에 프레임 하나가 생겨 . 메인에서 선언한 변수들은 프레임에 생김
stack-저장이 될때는1.2.3 순서로, 나갈때는 3,2,1순서로 
변수값이 스택에 저장될수도있고, 힙에 저장될수도있어 - 타입으로 결정
기본타입으로 변수 선언하면 - 프레임에 저장. 
참조타입으로 변수 선언하면 - 프레임에 주소 저장 -  값은 힙에 


p.5
main(매게변수) (String[] args) - args변수는 스택에 저장. 값은 힙에 
변수선언.int sum. 스택에 생성 4바이트.
if{
int v2 /기본타입. 스택에 저장
int v3/ 
sum=add(v2,v3) / add함수(인자값,인자값) (C에서) / (java)add메소드호출
 }
return 

add메소드가 실행될때만 프레임 존재. 끝나면 날라감

if문 이 끝나면, 블록안에서 선언한 변수 없어짐//v3,v2날라감
main메소드가 끝나면 선언한변수 다 날라감 . -> 메인의 프레임도 없어짐->JVM종료
 


[TypeExample01]
이클립스는 저장하면 자동으로 컴파일 

D:\IoTCourse\EclipseWorkspace\JavaProgramming

D:\IoTCourse\EclipseWorkspace\JavaProgramming\src\ch05\exam01  :소스파일
D:\IoTCourse\EclipseWorkspace\JavaProgramming\bin\ch05\exam01  :바이트파일


[CallByValueAndCallByReference]

int(반환타입) sum (매게변수 ) {
 } 


+ : 1.산술 2.문자열 결합 




p.7
== ,!= - 데이터가 있는 번지 비교 
힙영역에 생성되는 데이터=객체
refVar1==(!=)refVar2  참조하는 객체가 같으냐?다르냐?


[CompareValueExample]
기본타입 - 값자체가 저장
참조타입 - 번지가 저장 

참조타입은 무조건 객체를 참조함
String 


p.10
문자열 리터럴이 동일하다면 String 객체를 공유
String v5=new String("java");
new 새로운 객체를 만들어라
p.11
문자열을 비교할때. v5.equls(v6)






p.8
null. 기본타입 값만 저장할수 있음 
참조타입에만 대입할 수 있고 . 번지가 없다!

변수가 스택에 들어가는 시점-
int x;  //선언만
int x=10; //선언하고 값   =>값이 들어갈 때 변수가 생성된다.

String v1;
String v1=null;  //값이 들어가야 변수가 생성되는데, 참조변수에 번지를 넣어야되는데 번지를 넣기 애매하니까 null로

refVar==null // 현재 변수가 객체를 참조하고 있지 않느냐?
refVar!=null// 현재 변수가 객체를 참조하고 있느냐?
 

[NullExample]

[NullPointerException]
실행할때 발생하는 오류는 예외라고함 

.length .(참고하는객체로접근) length메소드 실행 

name.length
name이라는 변수가 객체로가서 이 객체의 length라는 메소드를 호출해라.
.=객체접근연산자

=연산자 오른쪽은 객체생성코드 왼쪽은 변수 


p.145
char v1='가';
char은 정수타입
String v2="가";    //문자열은 String 으로 



p.149
배열이란?같은타입의데이터를 연속된 공간에 저장하는 자료구조
int[] :int값을 갖는 배열
아직 배열이 만들어 지지 않았으면 null로 초기화

[ArrayExample01]
v1.v2 다른번지를 가지고 있음 

.
괄호 없는거 - 필드
괄호 있는거 - 메소드

args.length -0개 

[ArrayExample02]
int[] v2;
v2={10,20};
배열선언후 값을 넣을수 없다!
컴파일러가 배열의 길이를 알수 없으니까?  문법이니까....외워


publie static int sum()
sum함수는 int배열을 받아 최종값을 int로 반환한다.

int[] v1={10,20,30}; //힙에 100번지에 배열을 생성하고, v1에 리턴

sum({10,20,30} 에러
sum(new int[]{10.20.30}); 

sum += v2[i]; 연산자 1개
sum=sum+v2[i] 연산자 2개 
뭐가 연산속도가 빠를까 ? 컴파일러마다 다름......



[ArrayExample03]
String[] v1 =new String[5]; //

v1[0]="java"
별도로 힙영역에 java라는 문자열을 가지고 있는 객체가 생성된다. 



p.158 배열이 길이
length 읽기전용이다. 한번 배열이 만들어지면 바꿀수 없다. 



[MainArgumentExample]


D:\IoTCourse\EclipseWorkspace\JavaProgramming\bin\ch05\exam02


커맨드라인에서 
D:\IoTCourse\EclipseWorkspace\JavaProgramming\bin 여기서 java ch05.exam02.MainArgumentExample 실행
java ch05.exam02.MainArgumentExample a ->1 
java ch05.exam02.MainArgumentExample a b ->2

배열로 만들어져서 배열 번지로 들어옴 




p.162 다차원 배열
행과열로구성된 배열이아니고 일차원배열이 서로 연결되어있는 배열
int[][]scores=new int[2][3] 일차원배열의 항목이 2개 그 일차원배열이 참조하는 항목의 배열이 3개

int[][] scores=new int[2][] 
각항목이 참조하는 배열이 없다. -null
scores[0]=new int[2] -0 0



6.배열타입

향상된 for문
for(int score : scores) //int:값의 타입 



hw. 4장 예제 다~~해보기 
hw. 5장 확인문제 다~~~해보기 9번빼고

[ReadKeyCodeExample]

System.in.read();  키보드로부터 무언가를 읽고 정수를 리턴


엔터키는 두번의 키코드를 받는다 (10번,13번)13-carrige return 10-line feed

완전 종료하고 싶을때.
-return;
-System.exit(0); //여기서 바로 종료시킴

Q.12입력하면 ?? 