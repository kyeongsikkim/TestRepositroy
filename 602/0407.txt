p.576 12. 멀티스레드

프로세스 :실행중인 프로그램

멀티태스킹:동시에 두가지이상작업하는것
멀티스레드:하나의프로세스내에서 두가지이상 작업하는것
	-파일보내면서 채팅

스레드-하나의실행흐름
하나의프로그램에서 메소드1과 메소드2가 동시에 실행 
코드를 실행하는 주체가 스레드!

병렬(가장이상적)
동시  

1이처리되고 2가처리되고 번갈아가며 실행하는데 속도가 빠르다보니 
사용자가보기에 동시에 실행되는것처럼 보임 

작업관리자-성능
CPU-core8개


메인스레드-반드시하나존재
코드에서새로운스레드만들수있음
메인스레드에 작업스레드가 없으면 종료
나머지 작업스레드들이 종료도ㅣ어야 메인스레드종료

p.579
몇개의 작업을 병렬로 실행할지 결정

작업스레드생성방법
1.Thread클래스로부터

tread.start();

(exam01)
Toolkit toolkit=Toolkit.getDefaultToolkit();

동시에 해야할 작업들을 task로 정의하고 


(exam02)


p.586
(exam03)
String threadName=Thread.currentThread().getName(); //현재실행하는 스레드이름

run() 재정의 
run이 실행되면 스레드이 이름을 얻고 이름이 출력 
겟네임-슈퍼에서 넘겨준이름 


=>스레드는 이름을 가진다. 이름을 알고싶으면 getname
스레드 이름 정하려면 자식스레드의 생성자에서 
super(threadName);
setName(threadName);



스레드이름 디폴트값-Thread-n

String threadName=Thread.currentThread().getName();

Thread mainThread=Thread.currentThread();
String ThreadName=mainThread.getName(); 


p.588
스케줄링
어떤순서로 실행할 것인가

스케줄링-기본적으로 시간으로
우선순위방식- 누가더많이 실행할것인가 
(스레드1 많이 실행하고 싶고 스레드 2 적게 실행하고 싶으면 ) 1(낮은)~10(높은)
 기본우선순위는 5
setPriority

싱글코어-cpu하나
멀티코어-cpu여러개 -병렬성을가지기때문에 우선순위 의미없음

p.591
synchronized -단하나의 스레드만 실행할수있는 메소드,블록

동기화메소드 쓰면 스레드 1이 쓰는 동안 스레드 2가 못써 

user1이 사용하고있는 공유객체에 접근하는 user2는 대기상태로 빠짐 !!

언제씀?멀티스레드환경에서 공유객체를 하나의 스레드가 사용하고 잇을 때 다른스레드가 사용하는 것을 막기위해서 사용한다 
synchronized를 쓰려면 공유객체를 가지고 있어야해  


p.597 5.스레드상태
라이프사이클

start()하면 바로실행한ㄴ게 아니고 실행대기상태로 들어감 -Runnable
대기상태-실행안하고 있는 상태 


run()메소드 끝나면 스레드 종료



실행을 하다가 일시정지상태로 가는 경우 -ex,sleep
1.waiting - 안기다려도된다할때까지 
2.timed waiting-시간정해줌
3.blocked-synchroized같은거 


p.600  상태제어
실행메소드 빨리 종료하려면? run()메소드 빨리 종료하게 한다.!!!!


======================================================================================



stop()-사용안하는게좋음


실행하고있ㄴ는데 무의미한 실행을 하고있다면 
다른스레드를 실행상태로 하는게 더 효율적  -yield()


(exam06)
ThreadA threadA=new ThreadA(); 

= Thread thread=new threadA(); //상속받고있으니까 같음 


if(work){
	System.out.println("Thread A 작업중!");
	}else{
		yield();  //다른 스레드 작업하게 해줌 




p.606  join
실행상태->일시정지

A스레드가 일시정지로 갔다면, B스레드가 종료를 해야 A스레드가 실핻대기로 갈수있어 
기다리는쪽에서 join메소드를 호출



(exam07)
sum을 구하기도 전에 result를 출ㄹ력 


thread.join();  //스레드 끝날때 까지 기다리겠다.



p.608
wait(), notify(),notifyAll()
-동기화된 메소드안에서만 쓸수있음 !!


한번씩 쓰기 가능?
번갈아가면서 깨우고 기다리고 깨우고 기다리고 


(exam08)-한번씩 실행

public ReadThread(DataBox dataBox){
	this.dataBox=dataBox;
}   //생성자를 통해 외부에서 데이터를 받아 저장 : 생성자 주입

public void setDataBox(DataBox dataBox){
	this.dataBox=dataBox;
} //세터주입



p.615

(exam09)
실행중일때 interrupt는 의미없음
일시정지일때 interrupt는 가는 순간 예외발생


if(isInterrupted()){  -interrupt메소드 호출할때 실행-true리턴


스레드를 종료시키는방법
1.flag 
-while(!stop)  -stop의 값을보고 결정

2.flag사용안하는방법
-while(true)
-interrupt 메ㅔ소드 를 이용-일시정시이면 ㅇ예외발생
-일시정지상태 일부러 만들어주기   Thread.sleep(1);
-일시정지상태 만들어줌  isinterrupted - true리턴 




주스레드 죽으면 보조스레드 따라죽게하려면????
AutoSaveThread thread=new AutoSaveThread();
thread.setDaemon(true);
thread.start();



스레드그룹 왜?
그룹이 제공하는 interrupt()메소드가 있음 
전체종료관리를 하기 위해서 
